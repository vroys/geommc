proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
i=6
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
i=7
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
i=8
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
i=9
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
size
indices <- indices[indices>0]
cumsize <- cumsum(size)
indices
cumsize
?sparseMatrix
ctr.ind
samps <- sparseMatrix(i=indices,p = c(0,cumsize),index1 = T,dims = c(ncovar,n.iter), x = 1)
library(Matrix)
samps <- sparseMatrix(i=indices,p = c(0,cumsize),index1 = T,dims = c(ncovar,n.iter), x = 1)
samps
curr=NULL
ctr=0
ctr.ind=0
n.iter=7;size <- integer(n.iter)
indices <- integer(n.iter*5)
size
indices
i=1
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
ctr=0
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
size
indices
i=2
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
i=3
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
i=4
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
i=5
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
i=6
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
i=7
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
size
indices
i=8
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
size[8]
size
size
i=9
proposed = geommc:::samp_phi_vs(curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logp.add.p=geommc:::addvar_vs(proposed, x=X, ys=ys, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.del.p=geommc:::delvar_vs(proposed, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar)$logp
logp.swap.p=geommc:::swapvar_vs(proposed, ys=ys, x=X, xty=Xty, lam=lam, w=w, D=D, xbar=xbar,swapOnly=T)$logp
calc=geommc:::thet_vs(proposed,logp.add.p,logp.del.p,logp.swap.p,ncovar,symm,move.prob)
prod_p=calc[,1]
theta_p=calc[,2]
logp_prop=logp.vs(proposed,X,ys,lam,w)
logr = logp_prop+geommc:::log_phi_vs(curr,proposed,prod_p,theta_p,ncovar,logp.add.p,logp.del.p,logp.swap.p,symm,move.prob,X,ys,lam,w,eps)-logp_curr-geommc:::log_phi_vs(proposed,curr,prod_c,theta_c,ncovar,logp.add.cur,logp.del.cur,logp.swap.cur,symm,move.prob,X,ys,lam,w,eps)
logr
if (logr >=0 || log(runif(1)) < logr){
curr = proposed
ctr=ctr+1
}
if(!is.null(curr)){
size[i] <- length(curr)
indices[(ctr.ind+1):(ctr.ind+size[i])] <- curr
ctr.ind <- ctr.ind+size[i]
print(ctr)
}
size
aa=numeric(2)
aa
aa[3]=5
aa
aa[30]=5
aa
aa=matrix(seq(1,12),nr=3)
aa
aa[,4]=c(1,2,3)
aa
aa[,5]=c(1,2,3)
indices
cumsize
indices=indices[1:5]
cumsize=cumsize[1:5]
indices
cumsize
aa
aa=numeric(5)
aa
aa[6:9]=4
aa
n=50; p=100; nonzero = 3
trueidx <- 1:80
nonzero.value <- 80
TrueBeta <- numeric(p)
TrueBeta[trueidx] <- nonzero.value
rho <- 0.5
xone <- matrix(rnorm(n*p), n, p)
X <- sqrt(1-rho)*xone + sqrt(rho)*rnorm(n)
y <- 0.5 + X %*% TrueBeta + rnorm(n)
result <- geomc.vs(X=X, y=y, initial = seq(1,80), n.iter = 1)
result$samples
which(result$samples[,1]==1)
result <- geomc.vs(X=X, y=y, initial = seq(1,100), n.iter = 10)
which(result$samples[,1]==1)
which(result$samples[,10]==1)
which(result$samples[,9]==1)
which(result$samples[,4]==1)
length(which(result$samples[,4]==1))
length(which(result$samples[,1]==1))
length(which(result$samples[,10]==1))
result <- geomc.vs(X=X, y=y, initial = seq(0,100), n.iter = 10)
result <- geomc.vs(X=X, y=y, initial = seq(1,110), n.iter = 10)
100*20
10000*20
1000*20
result <- geomc.vs(X=X, y=y, initial = seq(1,110), n.iter = 10,burnin = 11)
result <- geomc.vs(X=X, y=y, initial = seq(1,110), n.iter = 10,burnin = 10)
result <- geomc.vs(X=X, y=y, initial = seq(1,10), n.iter = 10,burnin = 10)
result <- geomc.vs(X=X, y=y, initial = seq(1,10), n.iter = 11,burnin = 10)
result <- geomc.vs(X=X, y=y, initial = seq(1,10), n.iter = 11,burnin = 12)
result <- geomc.vs(X=X, y=y, initial = seq(1,10), n.iter = 11,burnin = 11)
result <- geomc.vs(X=X, y=y, initial = seq(1,10), n.iter = 5,burnin = 1,move.prob = c(0.3,0.1,0.5))
result <- geomc.vs(X=X, y=y, initial = seq(1,10), n.iter = 5,burnin = 1,symm=FALSE,move.prob = c(0.3,0.1,0.5))
result <- geomc.vs(X=X, y=y, initial = seq(1,10), n.iter = 5,burnin = 1,symm=FALSE,move.prob = c(0.3,0.1,-0.5))
a=4
b=3;if(a==4) if(b==3) print('c')
b=3;if(a==3) if(b==3) print('c')
b=3;if(a==4) if(b==2) print('c')
a<=4
a<=3
a>=3
a>=4
a>=5
a=numeric(4)
a
a[4:5]=1
a
a[7:9]=1
a
is.numeric(a)
a
remove.packages("geommc", lib="~/AppData/Local/R/win-library/4.4")
library(devtools)
load_all()
load_all()
devtools::document()
devtools::check()
detach(geommc)
detach('geommc')
detach("package:geommc", unload=TRUE)
library(devtools)
load_all()
devtools::document()
devtools::check()
?is.infinite
load_all()
devtools::document()
devtools::check()
load_all()
devtools::document()
devtools::check()
result<-geomc(log.target=function(y) log(0.5*dlnorm(y)+0.5*dlnorm(y,mean=10,sd=1.4)),initial=0,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dlnorm(y)+0.5*dlnorm(y,mean=10,sd=1.4)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
hist(result$samples)
result<-geomc(log.target=function(y) log(0.5*dgamma(y)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
hist(result$samples)
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=-10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=10^444),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) Inf,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=10^444),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=10^444),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(NA,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=10^444),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(Inf)}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) Inf,samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=10),samp.base=function(x) na,mean.ap.tar=function(x) c(NA,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=10),samp.base=function(x) NA,mean.ap.tar=function(x) c(NA,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=10),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(Inf,dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(Inf)}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=10),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(Inf)}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=10),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(Inf)} else{return(Inf)}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=10),samp.base=function(x) na,mean.ap.tar=function(x) c(NA,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),Inf),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dgamma(y,shape=1,rate=1)+0.5*dgamma(y,shape = 2, rate = 3)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=10),samp.base=function(x) x+rnorm(1),mean.ap.tar=function(x) c(NA,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),Inf),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
remove.packages("geommc", lib="~/AppData/Local/R/win-library/4.4")
library(devtools)
load_all()
devtools::document()
devtools::check()
result<-geomc(log.target=function(y) log(0.5*dlnorm(y)+0.5*dlnorm(y,mean=10,sd=1.4)),initial=0,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dlnorm(y)+0.5*dlnorm(y,mean=10,sd=1.4)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dlnorm(y)+0.5*dlnorm(y,mean=10,sd=1.4)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(Inf)}})
result<-geomc(log.target=function(y) log(0.5*dnorm(y)+0.5*dnorm(y,mean=10,sd=1.4)),initial=10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
n=50; p=100; nonzero = 50
trueidx <- 1:50
nonzero.value <- 8
TrueBeta <- numeric(p)
TrueBeta[trueidx] <- nonzero.value
rho <- 0.5
xone <- matrix(rnorm(n*p), n, p)
X <- sqrt(1-rho)*xone + sqrt(rho)*rnorm(n)
y <- 0.5 + X %*% TrueBeta + rnorm(n)
result <- geomc.vs(X=X, y=y, initial = seq(1,80), n.iter = 1)
result$median.model
length(result$median.model)
n=50; p=100; nonzero = 50
trueidx <- 1:50
nonzero.value <- 8
TrueBeta <- numeric(p)
TrueBeta[trueidx] <- nonzero.value
rho <- 0.5
xone <- matrix(rnorm(n*p), n, p)
X <- sqrt(1-rho)*xone + sqrt(rho)*rnorm(n)
y <- 0.5 + X %*% TrueBeta + rnorm(n)
result <- geomc.vs(X=X, y=y, initial = seq(1,80), n.iter = 50)
result$median.model
length(result$median.model)
dim(result$samples)
colSums(result$samples)
library(geommc)
remove.packages("geommc", lib="~/AppData/Local/R/win-library/4.4")
library(devtools)
devtools::load_all()
devtools::document()
pkgload::dev_help('geomc')
pkgload::dev_help('geomc.vs')
devtools::load_all()
devtools::document()
pkgload::dev_help('geomc.vs')
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
pkgload::dev_help('geomc')
pkgload::dev_help('geomc.vs')
devtools::load_all()
devtools::document()
devtools::check()
library(geommc)
remove.packages("geommc", lib="~/AppData/Local/R/win-library/4.4")
library(devtools)
devtools::load_all()
devtools::document()
devtools::check()
?geomc
?geomc.vs
remove.packages("geommc", lib="~/AppData/Local/R/win-library/4.4")
use_mit_license()
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
use_gpl_license()
devtools::load_all()
devtools::document()
devtools::check()
