library(geommc)
remove.packages("geommc", lib="~/AppData/Local/R/win-library/4.4")
library(devtools)
devtools::load_all()
getwd()
library(devtools)
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::document()
devtools::check()
library(geommc)
remove.packages("geommc", lib="~/AppData/Local/R/win-library/4.4")
getwd()
library(devtools)
devtools::load_all()
devtools::document()
devtools::check()
geommc::logp.vs()
geommc::geomc()
geommc::geomc.vs()
?geomc
?logp.vs
?geomc.vs
devtools::load_all()
devtools::document()
devtools::check()
devtools::load_all()
devtools::document()
pkgload::dev_help('geomc')
devtools::load_all()
devtools::document()
pkgload::dev_help('geomc')
devtools::load_all()
devtools::document()
pkgload::dev_help('geomc')
pkgload::dev_help('geomc.vs')
devtools::load_all()
devtools::document()
devtools::check()
log.target=function(x) dlnorm(x,log = T)
geomc(log.target,initial = -10,n.iter = 4)
geomc(log.target,initial = 10,n.iter = 4)
log.target(-10)==Inf
log.target(-10)
log.target=function(x) -dlnorm(x,log = T)
log.target(-10)
geomc(log.target,initial = 10,n.iter = 4)
log.target(-10)
is.infinite(log.target(-10))
is.infinite(-log.target(-10))
0*Inf
0*-Inf
log.target=function(x) 0*dlnorm(x,log = T)
geomc(log.target,initial = -10,n.iter = 4)
log.target=function(x) dlnorm(x,log = T)
geomc(log.target,initial = -10,n.iter = 4)
1
2
log.target(initialize())
initial=-10
log.target(initial)
log.target(initial)==-Inf
log.target(initial)==Inf
result<-geomc(log.target=function(y) log(0.5*dlnorm(y)+0.5*dlnorm(y,mean=10,sd=1.4)),initial=0,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
hist(result$samples)
result<-geomc(log.target=function(y) log(0.5*dlnorm(y)+0.5*dlnorm(y,mean=10,sd=1.4)),initial=-10,n.iter=500, mean.base = function(x) x,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
hist(result$samples)
log.target=function(y) log(0.5*dlnorm(y)+0.5*dlnorm(y,mean=10,sd=1.4));initial=-10
log.target(initial)
result<-geomc(log.target=function(y) log(0.5*dlnorm(y)+0.5*dlnorm(y,mean=10,sd=1.4)),initial=-10,n.iter=500, mean.base = function(x) log(x),var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dlnorm(y)+0.5*dlnorm(y,mean=10,sd=1.4)),initial=-10,n.iter=500, mean.base = function(x) x,var.base= function(x) -4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
[1]
result<-geomc(log.target=function(y) log(0.5*dlnorm(y)+0.5*dlnorm(y,mean=10,sd=1.4)),initial=-10,n.iter=500, mean.base = function(x) Inf,var.base= function(x) -4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dlnorm(y)+0.5*dlnorm(y,mean=10,sd=1.4)),initial=-10,n.iter=500, mean.base = function(x) Inf,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
result<-geomc(log.target=function(y) log(0.5*dnorm(y)+0.5*dnorm(y,mean=10,sd=1.4)),initial=-10,n.iter=500, mean.base = function(x) Inf,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=x,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
hist(result$samples)
result<-geomc(log.target=function(y) log(0.5*dnorm(y)+0.5*dnorm(y,mean=10,sd=1.4)),initial=-10,n.iter=500, mean.base = function(x) Inf,var.base= function(x) 4,dens.base=function(y,x) dnorm(y, mean=Inf,sd=2),samp.base=function(x) x+2*rnorm(1),mean.ap.tar=function(x) c(0,10),var.ap.tar=function(x) c(1,1.4^2),dens.ap.tar=function(y,x) c(dnorm(y),dnorm(y,mean=10,sd=1.4)),samp.ap.tar=function(x,kk=1){if(kk==1){return(rnorm(1))} else{return(10+1.4*rnorm(1))}})
library(devtools)
load_all()
devtools::document()
devtools::check()
n=50; p=100; nonzero = 3
trueidx <- 1:3
nonzero.value <- 4
TrueBeta <- numeric(p)
TrueBeta[trueidx] <- nonzero.value
rho <- 0.5
xone <- matrix(rnorm(n*p), n, p)
X <- sqrt(1-rho)*xone + sqrt(rho)*rnorm(n)
y <- 0.5 + X %*% TrueBeta + rnorm(n)
geomc.vs(X,y,c(1,2),2)
source("~/Documents/GitHub/geommc/R/geomcvs.R")
geomc.vs(X,y,c(1,2),2)
load_all()
library(devtools)
load_all()
a=c(1,2,3,4)
geomc(log.target = function(x) dnorm(x, log=TRUE),initial = 0, n.iter=1)
geomc(log.target = function(x) dnorm(x, log=TRUE),initial = 0, n.iter=1)
geomc(log.target = function(x) dnorm(x, log=TRUE),initial = 0, n.iter=3)
geomc(log.target = function(x) dnorm(x, log=TRUE),initial = 3, n.iter=1)
n=50; p=100; nonzero = 3
trueidx <- 1:3
nonzero.value <- 4
TrueBeta <- numeric(p)
TrueBeta[trueidx] <- nonzero.value
rho <- 0.5
xone <- matrix(rnorm(n*p), n, p)
X <- sqrt(1-rho)*xone + sqrt(rho)*rnorm(n)
y <- 0.5 + X %*% TrueBeta + rnorm(n)
geomc.vs(X,y,n.iter = 1)
geomc.vs(X,y,n.iter = 2)
result=geomc.vs(X,y,n.iter = 2)
result$samples[,1]
which(result$samples[,1]==1)
rowMeans(X)
rowMeans(X[,1:1])
rowMeans(X[,1:1,drop=FALSE])
load_all()
